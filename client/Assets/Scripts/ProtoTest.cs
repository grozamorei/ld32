//
// ATTENTION: This file is automatically generated. do not try to edit it.
//

using System;
using System.IO;

namespace proto
{

    public enum EnterWorldStatus
    {
        NONE,
        ENTER_SUCCESS,
    }

    public abstract class BaseMessage
    {
        public abstract byte getID();

        protected MemoryStream stream;
        protected BinaryWriter writer;
        protected BinaryReader reader;

        protected int length = -1;
        protected byte realID = 255;

        protected void initSendStream()
        {
            stream = new MemoryStream();
            writer = new BinaryWriter(stream, System.Text.Encoding.UTF8);
            for (int i = 0; i < 5; i++) writer.Write((byte) 0); // reserved for length and type;
        }

        protected void initReceiveStream(byte[] source)
        {
            stream = new MemoryStream(source);
            reader = new BinaryReader(stream, System.Text.Encoding.UTF8);
            length = reader.ReadInt32();
            realID = reader.ReadByte();
        }

        protected string wrapString(string value, int wrapAround)
        {
            byte[] byteValue = System.Text.Encoding.UTF8.GetBytes(value);
            int emptyLength = wrapAround - byteValue.Length;
            string filler = "";
            for (int i = 0; i < emptyLength; i++) filler += " ";
            return value + filler;
        }

        protected byte[] wrapCommand()
        {
            int commandLen = (int)stream.Length - 5;
            writer.Seek(0, SeekOrigin.Begin);
            writer.Write(commandLen);
            writer.Write(getID());
            return stream.ToArray();
        }
    }

    public class DebugPackage : BaseMessage
    {
        public static byte ID { get { return 0; } }
        public override byte getID() { return 0; }
        public readonly string sender;
        public readonly string message;
    
        public DebugPackage( string sender, string message )
        {
            initSendStream();
            this.sender = sender;
            this.message = message;
        }
        public DebugPackage(byte[] source)
        {
            initReceiveStream(source);
            sender = reader.ReadString();
            message = reader.ReadString();
        }
        public byte[] encode()
        {
            writer.Write(wrapString(sender, 50));
            writer.Write(sender);
            writer.Write(wrapString(message, 120));
            writer.Write(message);
            return wrapCommand();
        }
    }

    public class RequestEnterWorld : BaseMessage
    {
        public static byte ID { get { return 1; } }
        public override byte getID() { return 1; }
        public readonly string userName;
        public readonly string worldName;
    
        public RequestEnterWorld( string userName, string worldName )
        {
            initSendStream();
            this.userName = userName;
            this.worldName = worldName;
        }
        public byte[] encode()
        {
            writer.Write(wrapString(userName, 50));
            writer.Write(userName);
            writer.Write(wrapString(worldName, 50));
            writer.Write(worldName);
            return wrapCommand();
        }
    }

    public class DebugDeployConfiguration : BaseMessage
    {
        public static byte ID { get { return 2; } }
        public override byte getID() { return 2; }
        public readonly int[] configuration;
    
        public DebugDeployConfiguration( int[] configuration )
        {
            initSendStream();
            this.configuration = configuration;
        }
        public byte[] encode()
        {
            writer.Write((int)configuration.Length);
            for (int i = 0; i < configuration.Length; i++)
                writer.Write(configuration[i]);

            return wrapCommand();
        }
    }

    public class Welcome : BaseMessage
    {
        public static byte ID { get { return 3; } }
        public override byte getID() { return 3; }
        public readonly string availableName;
        public readonly string randomWorld;
    
        public Welcome(byte[] source)
        {
            initReceiveStream(source);
            availableName = reader.ReadString();
            randomWorld = reader.ReadString();
        }
    }

    public class ResponseEnterWorld : BaseMessage
    {
        public static byte ID { get { return 4; } }
        public override byte getID() { return 4; }
        public readonly EnterWorldStatus status;
        public readonly byte myId;
    
        public ResponseEnterWorld(byte[] source)
        {
            initReceiveStream(source);
            status = (EnterWorldStatus)reader.ReadByte();
            myId = reader.ReadByte();
        }
    }

    public class WorldData : BaseMessage
    {
        public static byte ID { get { return 5; } }
        public override byte getID() { return 5; }
        public readonly string name;
        public readonly short worldStep;
        public readonly short sizeX;
        public readonly short sizeY;
        public readonly short maxPopulation;
    
        public WorldData(byte[] source)
        {
            initReceiveStream(source);
            name = reader.ReadString();
            worldStep = reader.ReadInt16();
            sizeX = reader.ReadInt16();
            sizeY = reader.ReadInt16();
            maxPopulation = reader.ReadInt16();
        }
    }

    public class RoomSnapshot : BaseMessage
    {
        public static byte ID { get { return 6; } }
        public override byte getID() { return 6; }
        public readonly byte[] snapshot;
    
        public RoomSnapshot(byte[] source)
        {
            initReceiveStream(source);
        }
    }

}